name: Android Build ## name of the workflow

on:
  push:
    tags:
      - 'v*.*.*-android'
  workflow_dispatch: # To trigger manual build
jobs:
  android-build:
    if: github.ref_type == 'tag'
    name: Android Build
    runs-on: ubuntu-latest # using ubuntu latest version / or you can use a specific version

    steps:
      - name: Check out Git repository # clone the repo to local ci workspace
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build  android project
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11.0.15

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm i ts-node zx -g
          pnpm i --frozen-lockfile --prefer-offline

      - name: Create .env file
        env:
          API_URL: ${{ secrets.API_URL }}
          PAGE_URL: ${{ secrets.SENTRY_DSN }}
        shell: bash
        working-directory: ./mobile-app
        run: |
          touch .env
          echo $API_URL >> .env
          echo $SENTRY_DSN >> .env

      ## configure cash for gradle : will help to reduce build time
      - name: Cache Gradle Wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        working-directory: ./mobile-app
        run: cd android && chmod +x ./gradlew

      # Building and signing App
      - name: Build Android App Bundle
        working-directory: ./mobile-app
        run: |
          cd android && ./gradlew bundleRelease --no-daemon

      - name: Sign App Bundle
        id: sign_app_bundle
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: mobile-app/android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

        ## Distribute  App to google play alpha track
      - name: Upload App to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON_TEXT }}
          packageName: com.authier
          releaseFiles: mobile-app/android/app/build/outputs/bundle/release/*.aab
          track: internal
          status: completed
          inAppUpdatePriority: 2

      - name: Create mobile Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: authier-ml
          SENTRY_PROJECT: mobile-app
        with:
          environment: production
