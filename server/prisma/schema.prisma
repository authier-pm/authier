datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model EncryptedAuths {
    id        Int    @id @default(autoincrement())
    encrypted String @db.Text

    User   User   @relation(fields: [userId], references: [id])
    userId String @db.Uuid

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model User {
    id           String          @id @default(uuid()) @db.Uuid
    email        String          @unique
    password     String
    tokenVersion Int             @default(0)
    name         String?
    auths        EncryptedAuths?
    Token        Token[]
    createdAt    DateTime        @default(now())
    updatedAt    DateTime        @updatedAt
}

model Token {
    id         Int       @id @default(autoincrement())
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    type       TokenType
    emailToken String?   @unique // Only used for short lived email tokens
    valid      Boolean   @default(true)
    expiration DateTime

    // Relation fields
    user   User   @relation(fields: [userId], references: [id])
    userId String @db.Uuid
}

enum TokenType {
    EMAIL // used as a short-lived token sent to the user's email
    API
}
