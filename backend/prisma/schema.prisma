datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")

}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["selectRelationCount"]
}

model EncryptedAuths {
    id        Int    @id @default(autoincrement())
    encrypted String
    version   Int
    userId    String @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt


    user User @relation(fields: [userId], references: [id])
}

model Device {
    id            Int      @id @default(autoincrement())
    firstIpAdress String
    lastIpAdress  String
    name          String
    userId        String
    User          User     @relation(fields: [userId], references: [id])
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}

model OTPCodeEvent {
    id            BigInt       @id @default(autoincrement())
    kind          String
    timestamp     DateTime     @default(now())
    ipAdress      String
    url           String
    User          User         @relation(fields: [userId], references: [id])
    userId        String
    webOTPInputId Int?
    WebOTPInput   WebOTPInput? @relation(fields: [webOTPInputId], references: [id])
}

model WebOTPInput {
    id              Int            @id @default(autoincrement())
    kind            String
    createdAt       DateTime       @default(now())
    url             String
    domPath         String
    createdByUser   User           @relation(fields: [createdByUserId], references: [id])
    createdByUserId String
    OTPCodeEvent    OTPCodeEvent[]
}

model User {
    id           String          @id @default(uuid())
    email        String?         @unique
    phone_number String?         @unique
    account_name String?         @unique
    password     String
    tokenVersion Int             @default(0)
    name         String?
    auths        EncryptedAuths?
    Token        Token[]
    createdAt    DateTime        @default(now())
    updatedAt    DateTime        @updatedAt
    OTPCodeEvent OTPCodeEvent[]
    Device       Device[]
    WebOTPInput  WebOTPInput[]
}

model Token {
    id         Int       @id @default(autoincrement())
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    type       TokenType
    emailToken String?   @unique // Only used for short lived email tokens
    valid      Boolean   @default(true)
    expiration DateTime

    // Relation fields
    user   User   @relation(fields: [userId], references: [id])
    userId String
}

enum TokenType {
    EMAIL // used as a short-lived token sent to the user's email
    API
}
